name: Worker deployment CI

on:
  workflow_run:
    workflows: ['Node.js CI']
    branches: [master]
    types:
      - completed

env:
  NODE_VERSION: 14.16.1
  DOCKER_IMAGE_NAME: resolution-service

jobs:
  deployment:

    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    env:
      CONTAINER_REGISTRY_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.DOCKER_IMAGE_NAME }}
      
      - name: Setup Docker
        uses: docker/build-push-action@v2.4.0

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }} .

      - name: Tag image with container registry
        run:
          docker tag ${{ env.DOCKER_IMAGE_NAME }} ${{
          env.CONTAINER_REGISTRY_NAME }}

      - name: Deploy tagged image to container registry
        run: docker push ${{ env.CONTAINER_REGISTRY_NAME }}

      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Get yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Add yarn cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache.outputs.dir }}
            backend/node_modules
          key:
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-dev-${{
            hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-dev-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-dev-

      - name: Install dependencies
        run: yarn install --freeze-dependencies
